
name: Build and Publish Wheels

on:
  push:
    tags:
    - '*'
  workflow_dispatch:

jobs:
  build-sdist:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Install Poetry
      env:
        POETRY_VERSION: 1.8.3
      run: |
        curl -sSL https://install.python-poetry.org | python3 - --version 1.8.3
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Build sdist
      run: poetry build -f sdist

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: sdist-artifact
        path: dist/*.tar.gz

  build-wheel:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry on Linux and macOS
      if: runner.os != 'Windows'
      env:
        POETRY_VERSION: 1.8.3
      run: |
        curl -sSL https://install.python-poetry.org | python3 - --version 1.8.3
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install Poetry on Windows
      if: runner.os == 'Windows'
      env:
        POETRY_VERSION: 1.8.3
      run: |
        (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python - --version 1.8.3
        echo "C:\\Users\\runneradmin\\AppData\\Roaming\\Python\\Scripts" >> $env:GITHUB_PATH

    - name: Install dependencies
      run: poetry install

    - name: Build Wheel
      run: poetry build -f wheel

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist/*.whl

  publish:
    runs-on: ubuntu-latest
    needs:
    - build-wheel
    - build-sdist
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Wheel Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Install Poetry on Linux and macOS
      if: runner.os != 'Windows'
      env:
        POETRY_VERSION: 1.8.3
      run: |
        curl -sSL https://install.python-poetry.org | python3 - --version 1.8.3
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Move files to dist
      run: |
        mkdir -p ./dist
        mv ./artifacts/sdist-artifact/* ./dist
        mv ./artifacts/wheel-macos-latest-py3.8/* ./dist
        mv ./artifacts/wheel-ubuntu-latest-py3.8/* ./dist
        mv ./artifacts/wheel-windows-latest-py3.8/* ./dist
        mv ./artifacts/wheel-macos-latest-py3.9/* ./dist
        mv ./artifacts/wheel-ubuntu-latest-py3.9/* ./dist
        mv ./artifacts/wheel-windows-latest-py3.9/* ./dist
        mv ./artifacts/wheel-macos-latest-py3.10/* ./dist
        mv ./artifacts/wheel-ubuntu-latest-py3.10/* ./dist
        mv ./artifacts/wheel-windows-latest-py3.10/* ./dist
        mv ./artifacts/wheel-macos-latest-py3.11/* ./dist
        mv ./artifacts/wheel-ubuntu-latest-py3.11/* ./dist
        mv ./artifacts/wheel-windows-latest-py3.11/* ./dist
        mv ./artifacts/wheel-macos-latest-py3.12/* ./dist
        mv ./artifacts/wheel-ubuntu-latest-py3.12/* ./dist
        mv ./artifacts/wheel-windows-latest-py3.12/* ./dist
        rm -rf .dist/poga-*-linux_x86_64.whl
        ls -l ./dist

    - name: Build and Publish to PyPI
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish
